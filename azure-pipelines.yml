jobs:
  # All tasks on Windows....
#  - job: build_all_windows
#    displayName: Build all tasks (Windows)
#    timeoutInMinutes: 120
#    pool:
#      vmImage: windows-latest
#    variables:
#      CI_TEST: true
#    steps:
#      - task: UseDotNet@2
#        displayName: 'Install .NET Core SDK'
#        inputs:
#          version: 6.0.x
#      - script: choco install protoc --version=3.19.4 -y
#        displayName: 'Install protobuf'
#      - script: choco install unzip
#        displayName: 'Install unzip'
#      - task: BatchScript@1
#        displayName: 'Download AElf build tools'
#        inputs:
#          filename: 'scripts/download_binary.bat'
#      - script: PowerShell.exe -file build.ps1 -target=Run-Unit-Tests
#        displayName: 'Build and Test'
#      - task: PublishTestResults@2
#        condition: always()
#        inputs:
#          testRunner: VSTest
#          testResultsFiles: '**/*.trx'
#    - task: reportgenerator@5
#      displayName: ReportGenerator
#      inputs:
#        reports: '$(Build.SourcesDirectory)/test/*/TestResults/*/coverage.cobertura.xml'
#        targetdir: '$(Build.SourcesDirectory)/CodeCoverage'
#        reporttypes: 'Cobertura'
#        assemblyfilters: '-xunit*'
#    - script: PowerShell.exe -file build.ps1 -target=Upload-Coverage-Azure
#      displayName: 'Upload data to Codecov'
#   All tasks on Linux
#  - job: build_all_linux
#    displayName: Build all tasks (Linux)
#    timeoutInMinutes: 120
#    pool:
#      vmImage: ubuntu-latest
#    steps:
#      - task: UseDotNet@2
#        displayName: 'Install .NET Core SDK'
#        inputs:
#          version: 6.0.x
#      - script: bash scripts/download_binary.sh
#        displayName: 'Download AElf build tools'
#      - script: bash scripts/install.sh
#        displayName: 'Install protobuf'
#      - script: bash build.sh --target=Test-with-Codecov
#        displayName: 'Build and Test'
#      - task: PublishTestResults@2
#        condition: always()
#        inputs:
#          testRunner: VSTest
#          testResultsFiles: '**/*.trx'
#      - task: reportgenerator@5
#        displayName: ReportGenerator
#        inputs:
#          reports: '$(Build.SourcesDirectory)/test/*/TestResults/*/coverage.cobertura.xml'
#          targetdir: '$(Build.SourcesDirectory)/CodeCoverage'
#          reporttypes: 'Cobertura'
#          assemblyfilters: '-xunit*'
#      - script: bash build.sh --target=Upload-Coverage-Azure
#        displayName: 'Upload data to Codecov'
  # All tasks on macOS
  - job: build_all_darwin
    displayName: Build all tasks (macOS)
    timeoutInMinutes: 120
    pool:
      vmImage: macos-latest
    variables:
      CI_TEST: true
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK'
        inputs:
          version: 6.0.x
      - script: bash scripts/install_protobuf.sh
      - script: bash scripts/download_binary.sh
      - script: bash build.sh -target=Test-with-Codecov
        displayName: 'Build and Test'
      - task: PublishTestResults@2
        condition: always()
        inputs:
          testRunner: VSTest
          testResultsFiles: '**/*.trx'
      - task: reportgenerator@5
        displayName: ReportGenerator
        inputs:
          reports: '$(Build.SourcesDirectory)/test/*/TestResults/*/coverage.cobertura.xml'
          targetdir: '$(Build.SourcesDirectory)/CodeCoverage'
          reporttypes: 'Cobertura'
          assemblyfilters: '-xunit*'
      - script: bash build.sh --target=Upload-Coverage-Azure
        displayName: 'Upload data to Codecov' 