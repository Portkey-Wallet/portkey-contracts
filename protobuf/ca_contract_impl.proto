/**
 * CA contract.
 */
syntax = "proto3";

package caimpl;

import "aelf/core.proto";
import "aelf/options.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "ca_contract.proto";

option csharp_namespace = "Portkey.Contracts.CA";

service CAContractImpl {
  option (aelf.base) = "acs12.proto";
  option (aelf.base) = "ca_contract.proto";
  option (aelf.csharp_state) = "Portkey.Contracts.CA.CAContractState";
  // register disable
  rpc SetCreateHolderEnabled(SetCreateHolderEnabledInput) returns (google.protobuf.Empty) {}
  rpc GetCreateHolderEnabled(google.protobuf.Empty) returns (GetCreateHolderEnabledOutput) {option (aelf.is_view) = true;}

  rpc SetLoginGuardianCheckGuardianApprovedEnabled(SetLoginGuardianCheckGuardianApprovedEnabledInput) returns (google.protobuf.Empty) {}
  rpc GetLoginGuardianCheckGuardianApprovedEnabled(google.protobuf.Empty) returns (GetLoginGuardianCheckGuardianApprovedEnabledOutput) {option (aelf.is_view) = true;}
   
  // approve
  rpc ManagerApprove(ManagerApproveInput) returns (google.protobuf.Empty) {}
        
  rpc SetForbiddenForwardCallContractMethod(SetForbiddenForwardCallContractMethodInput) returns (google.protobuf.Empty) {}  
  
  rpc SetTransferLimit(SetTransferLimitInput) returns (google.protobuf.Empty) {}  
  
  rpc GetTransferLimit(GetTransferLimitInput) returns (GetTransferLimitOutput) {option (aelf.is_view) = true;}
      
  rpc SetDefaultTokenTransferLimit(SetDefaultTokenTransferLimitInput) returns (google.protobuf.Empty) {}    
  
  rpc GetDefaultTokenTransferLimit(GetDefaultTokenTransferLimitInput) returns (GetDefaultTokenTransferLimitOutput) {option (aelf.is_view) = true;}   
     
  rpc SetTransferSecurityThreshold(SetTransferSecurityThresholdInput) returns (google.protobuf.Empty) {}
  
  rpc GetTransferSecurityCheckResult(GetTransferSecurityCheckResultInput) returns (GetTransferSecurityCheckResultOutput) {option (aelf.is_view) = true;}
  
  // secondaryDelegatee
  // register project secondary delegate info
  rpc RegisterProjectDelegatee (RegisterProjectDelegateeInput) returns (aelf.Hash) {}
  //  add delegatee hash into delegate info
  rpc AddProjectDelegateeList (AddProjectDelegateeListInput) returns (google.protobuf.Empty) {}
  // remove delegatee hash from delegate info
  rpc RemoveProjectDelegateeList (RemoveProjectDelegateeListInput) returns (google.protobuf.Empty) {}
  // set project delegate controller
  rpc SetProjectDelegateController(SetProjectDelegateControllerInput) returns (google.protobuf.Empty){}
  // set project delegate signer
  rpc SetProjectDelegateSigner(SetProjectDelegateSignerInput) returns (google.protobuf.Empty){}
  // withdraw project delegatee token
  rpc WithdrawProjectDelegateeToken(WithdrawProjectDelegateeTokenInput) returns (google.protobuf.Empty){}
  // set ca project delegate hash
  rpc SetCaProjectDelegateHash (aelf.Hash) returns (google.protobuf.Empty) {}
  // get ca project delegate hash
  rpc GetCaProjectDelegateHash (google.protobuf.Empty) returns (aelf.Hash) {}
  // get project delegatee info by delegate hash
  rpc GetProjectDelegatee (aelf.Hash) returns (GetProjectDelegateInfoOutput) { option (aelf.is_view) = true; }

    rpc SetManagerForwardCallParallelInfo (SetManagerForwardCallParallelInfoInput) returns (google.protobuf.Empty) {}

    rpc GetManagerForwardCallParallelInfo (GetManagerForwardCallParallelInfoInput) returns (GetManagerForwardCallParallelInfoOutput) {option (aelf.is_view) = true;}
       
}

message SetCreateHolderEnabledInput {
  bool create_holder_enabled = 1;
}

message GetCreateHolderEnabledOutput {
  bool create_holder_enabled = 1;
}

message SetLoginGuardianCheckGuardianApprovedEnabledInput {
  bool login_guardian_check_guardian_approved_enabled = 1;
}

message GetLoginGuardianCheckGuardianApprovedEnabledOutput {
  bool login_guardian_check_guardian_approved_enabled = 1;
}

message ManagerApproveInput {
    aelf.Hash ca_hash = 1;
    aelf.Address spender = 2;
    repeated ca.GuardianInfo guardians_approved = 3;
    string symbol = 4;
    int64 amount = 5;
}
message ManagerApproved {
    option (aelf.is_event) = true;
    aelf.Hash ca_hash = 1;
    aelf.Address spender = 2;
    string symbol = 3;
    int64 amount = 4;
}

message SetTransferLimitInput {
    aelf.Hash ca_hash = 1;
    string symbol = 2;
    repeated ca.GuardianInfo guardians_approved = 3;
    int64 single_limit = 4;
    int64 daily_limit = 5;
}

message GetTransferLimitInput {
    aelf.Hash ca_hash = 1;
    string symbol = 2;
}
message GetTransferLimitOutput {
    int64 single_limit = 1;
    int64 daily_limit = 2;
    int64 daily_transferred_amount = 3;
}

message SetDefaultTokenTransferLimitInput {
    string symbol = 1;
    TransferLimit transfer_limit = 2;
}
message DefaultTokenTransferLimitChanged {
    option (aelf.is_event) = true;
    string symbol = 1;
    TransferLimit transfer_limit = 2;
}
message GetDefaultTokenTransferLimitInput {
    string symbol = 1;
}

message GetDefaultTokenTransferLimitOutput {
    string symbol = 1;
    TransferLimit transfer_limit = 2;
}

message SetForbiddenForwardCallContractMethodInput {
    string method_name = 1;
    aelf.Address address = 2;
    bool forbidden = 3;
}
message ForbiddenForwardCallContractMethodChanged {
    option (aelf.is_event) = true;
    string method_name = 1;
    aelf.Address address = 2;
    bool forbidden = 3;
}
message TransferLimit {
    int64 single_limit = 1;
    int64 day_limit = 2;
}
message TransferredAmount {
    int64 daily_transfered = 1;
    google.protobuf.Timestamp update_time = 2;
}

message ManagerApproveForbiddenEnabledInput {
  bool manager_approve_forbidden_enabled = 1;
}
message TransferLimitChanged{
    option (aelf.is_event) = true;
    aelf.Hash ca_hash = 1 [(aelf.is_indexed) = true];
    string symbol = 2 [(aelf.is_indexed) = true];
    int64 single_limit = 3 [(aelf.is_indexed) = true];
    int64 daily_limit = 4 [(aelf.is_indexed) = true];
}

message SetTransferSecurityThresholdInput{
    TransferSecurityThreshold transfer_security_threshold = 1;
}

message GetTransferSecurityCheckResultInput{
    aelf.Hash ca_hash = 1;
}

message GetTransferSecurityCheckResultOutput{
    bool is_security = 1;
}

message TransferSecurityThresholdList{
    repeated TransferSecurityThreshold transfer_security_thresholds = 1;
}

message TransferSecurityThreshold{
    string symbol = 1;
    int64 guardian_threshold = 2;
    int64 balance_threshold = 3;
}

message TransferSecurityThresholdChanged{
    option (aelf.is_event) = true;
    string symbol = 1;
    int64 guardian_threshold = 2;
    int64 balance_threshold = 3;
}

message RegisterProjectDelegateeInput {
  string project_name = 1;
  repeated string salts = 2;
}

message AddProjectDelegateeListInput{
  aelf.Hash project_hash = 1;
  repeated string salts = 2;
}

message RemoveProjectDelegateeListInput{
  aelf.Hash project_hash = 1;
  repeated aelf.Hash delegatee_hash_list = 2;
}

message SetProjectDelegateControllerInput {
    aelf.Hash project_hash = 1;
    aelf.Address project_controller = 2;
}

message SetProjectDelegateSignerInput {
    aelf.Hash project_hash = 1;
    aelf.Address signer = 2;
}

message WithdrawProjectDelegateeTokenInput {
    aelf.Hash project_hash = 1;
    aelf.Hash delegatee_hash = 2;
    int64 amount = 3;
}

message ProjectDelegateInfo {
    aelf.Address project_controller = 1;
    repeated aelf.Hash delegatee_hash_list = 2;
    aelf.Address signer = 3;
}

message GetProjectDelegateInfoOutput {
  aelf.Address project_controller = 1;
  repeated aelf.Hash delegatee_hash_list = 2;
  aelf.Address signer = 3;
  repeated aelf.Address delegatee_address_list = 4;
}

message SetManagerForwardCallParallelInfoInput {
    aelf.Address contract_address = 1;
    string method_name = 2;
    bool is_parallel = 3;
}

message GetManagerForwardCallParallelInfoInput {
    aelf.Address contract_address = 1;
    string method_name = 2;
}

message GetManagerForwardCallParallelInfoOutput {
    aelf.Address contract_address = 1;
    string method_name = 2;
    bool is_parallel = 3;
}
