// the version of the language, use proto3 for contracts
syntax = "proto3";

package data;

// some core imports for AElf chain types
import "aelf/core.proto";
import "aelf/options.proto";
import "acs12.proto";
import "oracle_common_message.proto";
import "coordinator_contract.proto";

// import for using the google.protobuf.* type.
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

// the name of the C# namespace in which the contract code will be,
// generated code will also be in this namespace.
option csharp_namespace = "AetherLink.Contracts.DataFeeds.Coordinator";

// the contract definition: a gRPC service definition.
service DataFeedsCoordinatorContract {

    // the full name of the C# class that will contain the state (here <namespace>.<state-class-name> format).
    option (aelf.base) = "acs12.proto";
    option (aelf.base) = "coordinator_contract.proto";
    option (aelf.csharp_state) = "AetherLink.Contracts.DataFeeds.Coordinator.DataFeedsCoordinatorContractState";

    rpc SetConfig (Config) returns (google.protobuf.Empty) {}
    rpc GetConfig (google.protobuf.Empty) returns (Config) { option (aelf.is_view) = true; }
}

message Config {
    int64 request_timeout_seconds = 1;
}

message SpecificData {
    bytes data = 1;
    int64 data_version = 2;
}

// log event
message ConfigSet {
    option (aelf.is_event) = true;
    Config config = 1;
}